<Application x:Class="WpfApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Определение кистей (Brushes) -->
        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#304FFE"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="#fff"/>
        <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#fff"/>
        <SolidColorBrush x:Key="PrimaryGrayColor" Color="#64677A"/>
        <SolidColorBrush x:Key="ButtonMouseOverColor" Color="#0026CA"/>
        <SolidColorBrush x:Key="ButtonPressedColor" Color="#7A7CFF"/>
        
        <!-- Стиль для кнопки -->
        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <!-- Установка значений свойств для кнопки -->
            <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Padding" Value="12 0 12 0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!-- Определение шаблона для отрисовки внешнего вида кнопки -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder" CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггеры для изменения внешнего вида кнопки при определенных событиях -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonMouseOverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonPressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для кнопки -->
        
        <!-- Стиль для TextBox -->
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <!-- Установка значений свойств для TextBox -->
            <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Padding" Value="6 3"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            
            <!-- Определение шаблона для отрисовки внешнего вида TextBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="txtBorder"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <!-- ScrollViewer для поддержки прокрутки текста -->
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>
                                <!-- Label для отображения Watermark (подсказка при пустом поле) -->
                                <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Padding="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="WaterMarkerLabel"
                                        Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для TextBox -->
        
        <!-- Стиль для RichTextBox -->
        <Style x:Key="RichTextBoxStyle" TargetType="{x:Type RichTextBox}">
            <!-- Установка значений свойств для RichTextBox -->
            <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="6 3"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="FontWeight" Value="Medium"/>

            <!-- Определение шаблона для отрисовки внешнего вида RichTextBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RichTextBox}">
                        <Border x:Name="txtBorder"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <!-- ScrollViewer для поддержки прокрутки текста -->
                                <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль для RichTextBox -->

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border x:Name="ComboBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <Grid>
                                <Label x:Name="WaterMarkerLabel2"
                                FontWeight="{TemplateBinding FontWeight}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Padding="{TemplateBinding Padding}"/>
                                <ToggleButton
                                Name="ToggleButton"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Content>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Margin="100,0,0,0"/>
                                                <Path
                                                x:Name="Arrow"
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Data="M0,0 L4,4 L8,0 Z"
                                                Fill="{DynamicResource PrimaryBlueColor}" />
                                        </Grid>
                                    </ToggleButton.Content>
                                </ToggleButton>

                                <ContentPresenter
                                Name="ContentSite"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"/>
                                <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                    <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="#FFFFFF" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                 TargetName="WaterMarkerLabel2"
                                 Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                 Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush"
                                    Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
